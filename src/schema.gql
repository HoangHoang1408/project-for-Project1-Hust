# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type StoredFile {
  fileUrl: String!
  filePath: String!
}

type Procedure {
  mortgateProperty: [String!]
  mortgatePaper: [String!]
  verificationPaper: [String!]
}

type CarType {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  carType: CarTypeEnum!
  price: Float!
  maxDistance: Float
  additionalDistancePrice: Float
  procedures: Procedure!
  acceptedPayment: [Payment!]!
  cars: [Car!]
  bookings: [Booking!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum CarTypeEnum {
  SEAT4
  SEAT5
  SEAT7
  SEAT12
  SEAT16
  PICKUP_TRUCK
  LUXURY_CAR
}

enum Payment {
  BEFORE
  AFTER
  BANK_TRANSFER
}

type VehicleStatus {
  booked: Boolean!
  goodCondition: Boolean!
}

type Car {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  rating: Float!
  engineType: EngineType!
  manufactureYear: Int!
  images: [StoredFile!]
  licensePlate: String!
  vehicleStatus: VehicleStatus!
  carBrand: CarBrand!
  transmissionType: TransmissionType!
  consumption: Float!
  features: [String!]!
  carType: CarType!
  bookings: [Booking!]
}

enum EngineType {
  GASOLINE
  ELECTRIC
  HIBRID
}

enum CarBrand {
  VINFAST
  TOYOTA
  HUYNDAI
  FORD
  HONDA
  NISSAN
  SUZUKI
  VOLVO
}

enum TransmissionType {
  MANUAL_TRANSMISSION
  AUTOMATIC_TRANSMISSION
}

type Service {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  serviceName: String!
  servicePrice: Float!
  description: String!
  perDay: Boolean!
}

type Booking {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  bookingCode: String!
  homeDelivery: String!
  startDate: DateTime!
  endDate: DateTime!
  totalPrice: Float!
  payment: Payment!
  status: BookingStatus!
  rating: Int
  feedBack: String
  cars: [Car!]!
  quantity: Float!
  carType: CarType!
  user: User
  customerName: String!
  customerPhone: String!
  note: String
  services: [Service!]
}

enum BookingStatus {
  NOT_DEPOSITE
  DEPOSITED
  VEHICLE_TAKEN
  FINISHED
  CANCEL
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  verified: Boolean!
  password: String!
  name: String!
  role: UserRole!
  address: String
  phoneNumber: String
  avatar: StoredFile
  bookings: [Booking!]
}

enum UserRole {
  Normal
  Admin
}

type SimpleUser {
  id: ID!
  email: String!
  name: String!
  role: UserRole!
}

type CustomError {
  mainReason: String!
  message: String!
}

type PaginationOutput {
  totalPages: Int
  totalResults: Int
}

type ForgotPasswordOutput {
  ok: Boolean!
  error: CustomError
}

type LoginOutPut {
  ok: Boolean!
  error: CustomError
  accessToken: String
  user: SimpleUser
}

type NewAccessTokenOutput {
  ok: Boolean!
  error: CustomError
  accessToken: String
}

type SignUpOutPut {
  ok: Boolean!
  error: CustomError
}

type VerifyEmailOutput {
  ok: Boolean!
  error: CustomError
}

type VerifyForgotPasswordOutput {
  ok: Boolean!
  error: CustomError
}

type CreateBookingOutput {
  ok: Boolean!
  error: CustomError
  bookingCode: String
}

type UpdateBookingStatusOutput {
  ok: Boolean!
  error: CustomError
}

type GetBookingDetailOutput {
  ok: Boolean!
  error: CustomError
  booking: Booking
}

type GetBookingsByOutput {
  ok: Boolean!
  error: CustomError
  bookings: [Booking!]
  pagination: PaginationOutput
}

type BookingFeedBackOutput {
  ok: Boolean!
  error: CustomError
}

type CheckCarAvailableOutput {
  ok: Boolean!
  error: CustomError
  available: Boolean
}

type DayData {
  status: BookingStatus
  day: DateTime!
}

type TableRowData {
  car: Car!
  dayDatas: [DayData!]!
  rowSumary: String!
}

type ForecastTableOutput {
  ok: Boolean!
  error: CustomError
  tableData: [TableRowData!]
  columnSummary: [String!]
}

type CreateCarOutput {
  ok: Boolean!
  error: CustomError
}

type GetCarDetailOutput {
  ok: Boolean!
  error: CustomError
  car: Car
}

type GetCarsByOutput {
  ok: Boolean!
  error: CustomError
  cars: [Car!]
  pagination: PaginationOutput
}

type UpdateCarOutput {
  ok: Boolean!
  error: CustomError
}

type GetCarTypeOutput {
  ok: Boolean!
  error: CustomError
  carType: CarType
  numOfCars: Float
}

type GetCarTypesOutput {
  ok: Boolean!
  error: CustomError
  carTypes: [CarType!]
  pagination: PaginationOutput
}

type UpdateCarTypeOutput {
  ok: Boolean!
  error: CustomError
}

type CreateServiceOutput {
  ok: Boolean!
  error: CustomError
}

type GetServiceOutput {
  ok: Boolean!
  error: CustomError
  service: Service
}

type UpdateServiceOutput {
  ok: Boolean!
  error: CustomError
}

type GetServicesByOutput {
  ok: Boolean!
  error: CustomError
  pagination: PaginationOutput
  services: [Service!]
}

type DeleteServiceOutput {
  ok: Boolean!
  error: CustomError
}

type ChangePasswordOutput {
  ok: Boolean!
  error: CustomError
}

type GetDetailUserOutput {
  ok: Boolean!
  error: CustomError
  user: User!
}

type UpdateUserOutput {
  ok: Boolean!
  error: CustomError
}

type GetUserByOutput {
  ok: Boolean!
  error: CustomError
  users: [User!]
  pagination: PaginationOutput
}

input StoredFileInputType {
  fileUrl: String!
  filePath: String!
}

input ProcedureInputType {
  mortgateProperty: [String!]
  mortgatePaper: [String!]
  verificationPaper: [String!]
}

input CarTypeInput {
  carType: CarTypeEnum!
  price: Float!
  maxDistance: Float
  additionalDistancePrice: Float
  procedures: ProcedureInputType!
  acceptedPayment: [Payment!]!
  cars: [CarInputType!]
  bookings: [BookingInputType!]
}

input CarInputType {
  name: String!
  rating: Float!
  engineType: EngineType!
  manufactureYear: Int!
  images: [StoredFileInputType!]
  licensePlate: String!
  vehicleStatus: VehicleStatusInputType!
  carBrand: CarBrand!
  transmissionType: TransmissionType!
  consumption: Float!
  features: [String!]!
  carType: CarTypeInput!
  bookings: [BookingInputType!]
}

input BookingInputType {
  bookingCode: String!
  homeDelivery: String!
  startDate: DateTime!
  endDate: DateTime!
  totalPrice: Float!
  payment: Payment!
  status: BookingStatus!
  rating: Int
  feedBack: String
  cars: [CarInputType!]!
  quantity: Float!
  carType: CarTypeInput!
  user: UserInputType
  customerName: String!
  customerPhone: String!
  note: String
  services: [ServiceInputType!]
}

input UserInputType {
  email: String!
  verified: Boolean!
  password: String!
  name: String!
  role: UserRole!
  address: String
  phoneNumber: String
  avatar: StoredFileInputType
  bookings: [BookingInputType!] = {}
}

input ServiceInputType {
  serviceName: String!
  servicePrice: Float!
  description: String!
  perDay: Boolean!
}

input VehicleStatusInputType {
  booked: Boolean!
  goodCondition: Boolean!
}

type Query {
  getDetailUser: GetDetailUserOutput!
  getUserBy(input: GetUserByInput!): GetUserByOutput!
  login(input: LoginInput!): LoginOutPut!
  newAccessToken(input: NewAccessTokenInput!): NewAccessTokenOutput!
  verifyEmail(input: VerifyEmailInput!): VerifyEmailOutput!
  forgotPassword(input: ForgotPasswordInput!): ForgotPasswordOutput!
  getCarDetail(input: GetCarDetailInput!): GetCarDetailOutput!
  getCarType(input: GetCarTypeInput!): GetCarTypeOutput!
  getCarsBy(input: GetCarsByInput!): GetCarsByOutput!
  getCarTypes(input: GetCarTypesInput!): GetCarTypesOutput!
  checkCarAvailable(input: CheckCarAvailableInput!): CheckCarAvailableOutput!
  getBookingDetail(input: GetBookingDetailInput!): GetBookingDetailOutput!
  getBookingsBy(input: GetBookingsByInput!): GetBookingsByOutput!
  forecastTable(input: ForecastTableInput!): ForecastTableOutput!
  getService(input: GetServiceInput!): GetServiceOutput!
  getServices(input: GetServicesByInput!): GetServicesByOutput!
}

input GetUserByInput {
  role: UserRole
  name: String
  phoneNumber: String
  pagination: PaginationInput!
}

input PaginationInput {
  page: Int = 1
  resultsPerPage: Int = 10
}

input LoginInput {
  email: String!
  password: String!
}

input NewAccessTokenInput {
  accessToken: String!
}

input VerifyEmailInput {
  verificationToken: String!
}

input ForgotPasswordInput {
  email: String!
}

input GetCarDetailInput {
  carId: ID!
}

input GetCarTypeInput {
  carType: CarTypeEnum!
}

input GetCarsByInput {
  carType: CarTypeEnum
  carBrand: CarBrand
  name: String
  licensePlate: String
  pagination: PaginationInput!
}

input GetCarTypesInput {
  pagination: PaginationInput!
}

input CheckCarAvailableInput {
  startDate: DateTime!
  endDate: DateTime!
  carType: CarTypeEnum!
  quantity: Float!
}

input GetBookingDetailInput {
  bookingId: ID!
}

input GetBookingsByInput {
  bookingCode: String
  bookingStatus: BookingStatus
  carType: CarTypeEnum
  startDate: DateTime
  endDate: DateTime
  pagination: PaginationInput!
}

input ForecastTableInput {
  carType: CarTypeEnum!
  startDate: DateTime!
  endDate: DateTime!
}

input GetServiceInput {
  id: ID!
}

input GetServicesByInput {
  serviceName: String
  pagination: PaginationInput!
}

type Mutation {
  updateUser(input: UpdateUserInput!): UpdateUserOutput!
  changePassword(input: ChangePasswordInput!): ChangePasswordOutput!
  signup(input: SignUpInput!): SignUpOutPut!
  verifyForgotPassword(input: VerifyForgotPasswordInput!): VerifyForgotPasswordOutput!
  createCar(input: CreateCarInput!): CreateCarOutput!
  updateCar(input: UpdateCarInput!): UpdateCarOutput!
  updateCarType(input: UpdateCarTypeInput!): UpdateCarTypeOutput!
  createBooking(input: CreateBookingInput!): CreateBookingOutput!
  updateBookingStatus(input: UpdateBookingStatusInput!): UpdateBookingStatusOutput!
  bookingFeedback(input: BookingFeedBackInput!): BookingFeedBackOutput!
  createService(input: CreateServiceInput!): CreateServiceOutput!
  updateService(input: UpdateServiceInput!): UpdateServiceOutput!
  deleteService(input: DeleteServiceInput!): DeleteServiceOutput!
}

input UpdateUserInput {
  name: String!
  address: String
  phoneNumber: String
  avatar: StoredFileInputType
}

input ChangePasswordInput {
  password: String!
  currentPassword: String!
  confirmPassword: String!
}

input SignUpInput {
  email: String!
  password: String!
  name: String!
  role: UserRole!
  confirmPassword: String!
}

input VerifyForgotPasswordInput {
  verificationToken: String!
  password: String!
  confirmPassword: String!
}

input CreateCarInput {
  name: String!
  engineType: EngineType!
  manufactureYear: Int!
  images: [StoredFileInputType!]
  licensePlate: String!
  carBrand: CarBrand!
  transmissionType: TransmissionType!
  consumption: Float!
  features: [String!]!
  carType: CarTypeEnum
}

input UpdateCarInput {
  name: String
  engineType: EngineType
  manufactureYear: Int
  images: [StoredFileInputType!]
  licensePlate: String
  carBrand: CarBrand
  transmissionType: TransmissionType
  consumption: Float
  features: [String!]
  carType: CarTypeEnum
  carId: ID!
  vehicleStatus: VehicleStatusInputType
}

input UpdateCarTypeInput {
  carType: CarTypeEnum!
  price: Float!
  maxDistance: Float
  additionalDistancePrice: Float
  procedures: ProcedureInputType!
  acceptedPayment: [Payment!]!
}

input CreateBookingInput {
  homeDelivery: String!
  startDate: DateTime!
  endDate: DateTime!
  payment: Payment!
  quantity: Float!
  customerName: String!
  customerPhone: String!
  note: String
  carTypeName: CarTypeEnum!
  serviceIds: [ID!]
}

input UpdateBookingStatusInput {
  status: BookingStatus!
  bookingId: Int!
}

input BookingFeedBackInput {
  id: ID!
  rating: Int!
  feedback: String
}

input CreateServiceInput {
  serviceName: String!
  servicePrice: Float!
  description: String!
  perDay: Boolean!
}

input UpdateServiceInput {
  serviceName: String
  servicePrice: Float
  description: String
  perDay: Boolean
  id: ID!
}

input DeleteServiceInput {
  id: ID!
}